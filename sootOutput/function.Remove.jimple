public class function.Remove extends function.Function
{

    public void <init>()
    {
        function.Remove this;

        this := @this: function.Remove;
        specialinvoke this.<function.Function: void <init>()>();
        return;
    }

    public java.util.List func(soot.Local, soot.Local, java.util.List)
    {
        function.Remove this;
        soot.Local rop, lop;
        java.util.List rub;
        java.util.ArrayList $r0, list;
        java.lang.String $r1, $r2;
        boolean $z0;

        this := @this: function.Remove;
        rop := @parameter0: soot.Local;
        lop := @parameter1: soot.Local;
        rub := @parameter2: java.util.List;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        list = $r0;
        if rop == null goto label0;

        $r1 = interfaceinvoke rop.<soot.Local: java.lang.String getName()>();
        $r2 = interfaceinvoke lop.<soot.Local: java.lang.String getName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 != 0 goto label0;

        interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>(rop);

     label0:
        return list;
    }
}
